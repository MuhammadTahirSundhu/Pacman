INCLUDE Irvine32.inc
Include macros.inc
Includelib Winmm.lib


PlaySound Proto,
pszSound:ptr Byte,
hmod:DWORD,
fdwSound:Dword 
.data


ground BYTE "------------------------------------------------------------------------------------------------------------------------",0
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0
       BYTE "||------                                                                                                      --------||",0
       BYTE "||------ ...................................................................................................  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || |#### || || || || || || || || || || || ##### || || || || || ||..  --------||",0
       BYTE "||------ ..|| #############| || || || || || || ##                                     || || || || || || ||..  --------||",0
       BYTE "||------ ..|| ||           | || || || #######| || || || || || || || ####| || || || || || || || || || || ||..  --------||",0
       BYTE "||------ .. . ##                            ##... ................................... ......................  --------||",0
       BYTE "||------ ..|| || || || #######| || || || ## #| || || || || || || ####| |#### || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || || || || || || || || || || || || || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || ####| || || || || ####| || || |#### || || || || || || || || ||..  --------||",0
       BYTE "||------ .... .. .......................... ..... ................................... ......................  --------||",0
       BYTE "||------ ..|| || || || || |####### || || || |#### #| ## #######| ## #######| |#### || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || ||                            || || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || || || ####| ####| || || || || || || |#### || || || || || || ||..  --------||",0
       BYTE "||------ .... .. .......................... .. .. ....................... ........... ......................  --------||",0
       BYTE "||------ ..|| || || || || |####### || || || || || || #### ||  || || || || || || || || ########### || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || || || || || || || || || || || || || || || ########### || || ||..  --------||",0
       BYTE "||------ ..|| ||                            || |# ## || ####| || || || || || || |#### || || || || || || ||..  --------||",0
       BYTE "||------ ..|| |####### #######| || || || #####                            || || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || |# ###|| || || ####| || #######| |#### || || || || || || || ||..  --------||",0
       BYTE "||------ .... ................................ ...................................... ......................  --------||",0
       BYTE "||------ ..|| || |####### || || || || || ####| || || || || || ####| || || |#### || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || || || || || || || || || || || || || || || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || || ####| || || || || || || || |#### |#### || || || || || || || || || ||..  --------||",0
       BYTE "||------ ..|| #############| || || || || || ||                                        || || || || || || ||..  --------||",0
       BYTE "||------ ..|| || || || || || || || ####| || |###| || || || || || || |#### || || || |###| || || || || || ||..  --------||",0
       BYTE "||------                                                                                                      --------||",0                                                            
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0

ground_ex BYTE"222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222",0
          BYTE "222222220111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111002222222222",0
          BYTE "222222220112202202202202202202202202202202202222202202202202202202202202202202202202222202202202202202202211002222222222",0
          BYTE "222222220112202222222222222202202202202202202202200000000000000000000000000000000000002202202202202202202211002222222222",0
          BYTE "222222220112202200000000000202202202202222222202202202202202202202202222202202202202202202202202202202202211002222222222",0
          BYTE "222222220110102200000000000000000000000000002211101111111111111111111111111111111111101111111111111111111111002222222222",0
          BYTE "222222220112202202202202222222202202202202202202202202202202202202222202222202202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202202202202202202202202202202202202202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202222202202202202202222202202202222202202202202202202202202202211002222222222",0
          BYTE "222222220111101101111111111111111111111111101111101111111111111111111111111111111111101111111111111111111111002222222222",0
          BYTE "222222220112202202202202202222222202202202202222202202202222222202202222222202222202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202200000000000000000000000000002202202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202202202222202222202202202202202202202222202202202202202202202211002222222222",0
          BYTE "222222220111101101111111111111111111111111101101101111111111111111111111101111111111101111111111111111111111002222222222",0
          BYTE "222222220112202202202202202222222202202202202202202202222022002202202202202202202202202222222222202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202202202202202202202202202202202202202202202222222222202202202211002222222222",0
          BYTE "222222220112202200000000000000000000000000002202202202202222202202202202202202202222202202202202202202202211002222222222",0
          BYTE "222222220112202222222202222222202202202202222200000000000000000000000000002202202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202202222202202202222202202222222202222202202202202202202202202211002222222222",0
          BYTE "222222220111101111111111111111111111111111111101111111111111111111111111111111111111101111111111111111111111002222222222",0
          BYTE "222222220112202202222222202202202202202202222202202202202202202222202202202222202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202202202202202202202202202202202202202202202202202202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202202222202202202202202202202202222202222202202202202202202202202202202211002222222222",0
          BYTE "222222220112202222222222222202202202202202202200000000000000000000000000000000000000002202202202202202202211002222222222",0
          BYTE "222222220112202202202202202202202202222202202222202202202202202202202222202202202202222202202202202202202211002222222222",0
          BYTE "222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222",0                                                            
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0

ground1 BYTE "------------------------------------------------------------------------------------------------------------------------",0
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0
       BYTE "||------                                                                                                      --------||",0
       BYTE "||------  .................................................................................................   --------||",0
       BYTE "||------  .|| || || || || || ##### || || || || || || || || || || || || || || ##### || || || || || || || ||.   --------||",0
       BYTE "||------  .|| #############| ||                                                 || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || || |######| || || || || || || || || ####| || || || || || || || || || |####.   --------||",0
       BYTE "||------  . .......... ........................................................ ...........................   --------||",0
       BYTE "||------  .|| || || || #######| || || || ####| || || || || || || ####| |#### || || || || || || || |#### ||.   --------||",0
       BYTE "||------  .|| || || ||                      || || || || || || || || || || || || || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || || || || || ####| || || || || ####| || || |#### || || || || || ####| || ||.   --------||",0
       BYTE "||------  ............ ........ ........... ................................... ...........................   --------||",0
       BYTE "||------  .|| || || || || |# ##             || ####| || || ####| || || || || |# ## || || ||####|| || || ||.   --------||",0
       BYTE "||------  .|| || || || || || ##### || || || || || || || || || || |######| || || || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || || || || || || || ####| ####| || ||    ####| || |#### |#### || || || || ||.   --------||",0
       BYTE "||------  ............ ........ ................................... ........... ...........................   --------||",0
       BYTE "||------  .|| || || || || |####### || || || || || || || || || || || || || ###|| || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || || || || || || || || || || || || || || || ###|| || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || ||          || || || || || |#### || ####| || || || || || || |#### |#### || || || || ||.   --------||",0
       BYTE "||------  .|| || || |#########| || || || || || || || || || || || ||             || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || || || || || |#### || || || ####| |#### #| || |#### || || ||####|| || || ||.   --------||",0
       BYTE "||------  ..................... ...................................... ....................................   --------||",0
       BYTE "||------  .|| || |####### || || || || || ####| || || || || || ####| || || |#### || || || || || ####| || ||.   --------||",0
       BYTE "||------  .|| || || || || || ||                                        || || || || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || ##### || ####| || || || || || || || |#####|#### || || || || || || || |#### ||.   --------||",0
       BYTE "||------  .|| #############| || || || || || || || || || || || || || || || || || || || || || || || || || ||.   --------||",0
       BYTE "||------  .|| || || || || || || ||#####| || || || || || || || || || |#### || || || || || || || || || ||###.   --------||",0
       BYTE "||------                                                                                                      --------||",0                                                            
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0

ground1_ex BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222",0
          BYTE "222222220011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110002222222222",0
          BYTE "222222220012202202202202202202222202202202202202202202202202202202202202202202222202202202202202202202202210002222222222",0
          BYTE "222222220012202222222222222202200000000000000000000000000000000000000000000000002202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202202222222202202202202202202202202202222202202202202202202202202202202222210002222222222",0
          BYTE "222222220010111111111101111111111111111111111111111111111111111111111111111111101111111111111111111111111110002222222222",0
          BYTE "222222220012202202202202222222202202202202222202202202202202202202222202222202202202202202202202202222202210002222222222",0
          BYTE "222222220012202202202200000000000000000000002202202202202202202202202202202202202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202202202202202222202202202202202222202202202222202202202202202202222202202210002222222222",0
          BYTE "222222220011111111111101111111101111111111101111111111111111111111111111111111101111111111111111111111111110002222222222",0
          BYTE "222222220012202202202202202202200000000000002202222202202202222202202202202202202202202202222222202202202210002222222222",0
          BYTE "222222220012202202202202202202222202202202202202202202202202202202222222202202202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202202202202202202202222202222202202200002222202202222202222202202202202202210002222222222",0
          BYTE "222222220011111111111101111111101111111111111111111111111111111111101111111111101111111111111111111111111110002222222222",0
          BYTE "222222220012202202202202202222222202202202202202202202202202202202202202202222202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202202202202202202202202202202202202202202202222202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202200000000002202202202202202222202202222202202202202202202202222202222202202202202202210002222222222",0
          BYTE "222222220012202202202222222222202202202202202202202202202202202202200000000000002202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202202202202202222202202202202222202222202202202222202202202222222202202202210002222222222",0
          BYTE "222222220011111111111111111111101111111111111111111111111111111111111101111111111111111111111111111111111110002222222222",0
          BYTE "222222220012202202222222202202202202202202222202202202202202202222202202202222202202202202202202222202202210002222222222",0
          BYTE "222222220012202202202202202202200000000000000000000000000000000000000002202202202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202222202202222202202202202202202202202222222222202202202202202202202202222202210002222222222",0
          BYTE "222222220012202222222222222202202202202202202202202202202202202202202202202202202202202202202202202202202210002222222222",0
          BYTE "222222220012202202202202202202202222222202202202202202202202202202202222202202202202202202202202202202222210002222222222",0
          BYTE "222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222",0                                                            
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0

ground2 BYTE"------------------------------------------------------------------------------------------------------------------------",0
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0
       BYTE "||------                                                                                                      --------||",0
       BYTE "||------   ########### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### #####    --------||",0
       BYTE "||------       # ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||       --------||",0
       BYTE "||------   ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### #####    --------||",0
       BYTE "||------         ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||             --------||",0
       BYTE "||------         ##..................................##      .........................................        --------||",0
       BYTE "||------##### ## ##### ########### ######## ############## ########### ########### ########### ######## |##   --------||",0
       BYTE "||------. .|| ||    ||    ||    ||    ||       ||    ||          ||             ||    ||    ||    ||          --------||",0
       BYTE "||------. .|| || || || || || || || || || || ####| || || || || ####| || || || || || || || || || ####| || ||    --------||",0
       BYTE "||------. .                                                                                 ##                --------||",0
       BYTE "        . .|| || || || ######## || || || || || ####| || || ####| || || || || || || || || || || || || || ||              ",0
       BYTE "        . .|| || || || ||    || || || || || ||                || || || || || || || || || || ||               #          ",0
       BYTE "        . .|| || || || || || || || || || || || || ####| ####| || || || || || || || || || || ##### ######|#####          ",0
       BYTE "||------. ......             ##                                     #####                      ##             --------||",0
       BYTE "||------. .|| ##### || || || || || || || || || || || #### ||  || || || || || || || || ##### || || || || ||. . --------||",0
       BYTE "||------. .|| || || || || || || || || || || || ||             || || || || || || || ||    || || || || || ||. . --------||",0
       BYTE "||------. .|| || || || || || || || || || || || ####| || || ## #| || || || || || || || || || || || || || ||. . --------||",0
       BYTE "||------. .|| || || || || || || || || || || ||                || || || || || || || ||          #####      . . --------||",0
       BYTE "||------. .|| || || || || || || || || || || |#### || || || ####| || || || || || || |# ## || || || || || ||. . --------||",0
       BYTE "||------. ............... .. .. #####..............................                      #####............. . --------||",0
       BYTE "||------. .|| || || || || || || || ||    ####| || || || || || ####| || ##### || || || || || || || || || ||. . --------||",0
       BYTE "||------. .|| || || || || || || || ||                                        || || || || || || || || || ||. . --------||",0
       BYTE "||------. .|| || || || ||       || #######| || || || || || || || ||    || || || || ||       || || || || ||. . --------||",0
       BYTE "||------. .##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ##### ## ## ##### #####. . --------||",0
       BYTE "||------. .||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||    ||   . . --------||",0
       BYTE "||------. .....................................##.........................................                    --------||",0                                                            
       BYTE "||--------------------------------------------------------------------------------------------------------------------||",0

ground2_ex BYTE"222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0
          BYTE "222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222",0
          BYTE "222222220002222222222202222202222202222202222202222202222202222202222202222202222202222202222202222202222200002222222222",0
          BYTE "222222220000000202200002200002200002200002200002200002200002200002200002200002200002200002200002200002200000002222222222",0
          BYTE "222222220002222202222202222202222202222202222202222202222202222202222202222202222202222202222202222202222200002222222222",0
          BYTE "222222220000000002200002200002200002200002200002200002200002200002200002200002200002200002200002200000000000002222222222",0
          BYTE "222222220000000002211111111111111111111111111111111112200000011111111111111111111111111111111111111111000000002222222222",0
          BYTE "222222222222202202222202222222222202222222202222222222222202222222222202222222222202222222222202222222202220002222222222",0
          BYTE "222222221012202200002200002200002200002200000002200002200000000002200000000000002200002200002200002200000000002222222222",0
          BYTE "222222221012202202202202202202202202202202202222202202202202202222202202202202202202202202202202222202202200002222222222",0
          BYTE "222222221010000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000002222222222",0
          BYTE "000000001012202202202202222222202202202202202202222202202202222202202202202202202202202202202202202202202200000000000000",0
          BYTE "000000001012202202202202200002202202202202202200000000000000002202202202202202202202202202202200000000000000020000000000",0
          BYTE "000000001012202202202202202202202202202202202202202222202222202202202202202202202202202202202222202222222222220000000000",0
          BYTE "222222221011111100000000000002200000000000000000000000000000000000002222200000000000000000000002200000000000002222222222",0
          BYTE "222222221012202222202202202202202202202202202202202202222022002202202202202202202202202222202202202202202210102222222222",0
          BYTE "222222221012202202202202202202202202202202202202200000000000002202202202202202202202200002202202202202202210102222222222",0
          BYTE "222222221012202202202202202202202202202202202202222202202202202202202202202202202202202202202202202202202210102222222222",0
          BYTE "222222221012202202202202202202202202202202202200000000000000002202202202202202202202200000000002222200000010102222222222",0
          BYTE "222222221012202202202202202202202202202202202222202202202202222202202202202202202202202202202202202202202210102222222222",0
          BYTE "222222221011111111111111101101102222211111111111111111111111111111100000000000000000000002222211111111111110102222222222",0
          BYTE "222222221012202202202202202202202202200002222202202202202202202222202202222202202202202202202202202202202210102222222222",0
          BYTE "222222221012202202202202202202202202200000000000000000000000000000000000000002202202202202202202202202202210102222222222",0
          BYTE "222222221012202202202202200000002202222222202202202202202202202202200002202202202202200000002202202202202210102222222222",0
          BYTE "222222221012222202222202222202222202222202222202222202222202222202222202222202222202222202202202222202222210102222222222",0
          BYTE "222222221012200002200002200002200002200002200002200002200002200002200002200002200002200002200002200002200010102222222222",0
          BYTE "222222221011111111111111111111111111111111111112211111111111111111111111111111111111111111000000000000000000002222222222",0                                                            
          BYTE "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222",0


    menu db "------------------------------------------------------------------------------------------------------------------------",0
         db "------                 --                  ------           ------------------------------------------------------------",0
         db "------                 --    ----------    -----  ----------------------------------------------------------------------",0
         db "------      -----      --    ---    ---    ----  ------------     ----------    ---             -----     --------   ---",0
         db "------      -----      --    ---    ---    ---   ------------      --------     ---   -------   -----   -   ------   ---",0
         db "------                 --    ---    ---    --    ------------   -   -----   -   ---   --   --   -----   ---   ----   ---",0
         db "------                 --    ----------    --    ------------   ---   -   ---   ---   -------   -----   -----   --   ---",0
         db "------    ---------------                  --    ------------   ----    -----   ---             -----   -------  -   ---",0
         db "------    ---------------    ----------    --    ------------   -------------   ---   -------   -----   --------     ---",0
         db "------    ---------------    ----------    ---   ------------   -------------   ---   -------   -----   ----------   ---",0
         db "------    ---------------    ----------    ----  -----------------------------------------------------------------------",0
         db "------    ---------------    ----------    -----  ----------------------------------------------------------------------",0
         db "------    ---------------    ----------    ------           ------------------------------------------------------------",0
         db "------------------------------------------------------------------------------------------------------------------------",0
          
name_pg  db "                                                                                                                        ",0
         db "      &#&##############  $#$###########$#$#      ###########                                                            ",0
         db "      &#&##############  $#$#############$#     ##                                                                      ",0
         db "      &#&#         ####  $#$#          $#$#    ##            #####          ####   #############     #####        ###   ",0
         db "      &#&#         ####  $#$#          $#$#   ###            ######        #####   ###       ###     ### ###      ###   ",0
         db "      &#&#         ####  $#$#          $#$#  ####            ### ###     ### ###   ###       ###     ###   ###    ###   ",0
         db "      &#&##############  $#$###########$#$#  ####            ###   ### ###   ###   #############     ###     ###  ###   ",0
         db "      &#&##############  $#$###########$#$#  ####            ###    ####     ###   #############     ###       ## ###   ",0
         db "      &#&#               $#$#          $#$#  ####            ###             ###   ###       ###     ###        #####   ",0
         db "      &#&#               $#$#          $#$#   ###            ###             ###   ###       ###     ###         ####   ",0
         db "      &#&#               $#$#          $#$#    ##                                                                       ",0
         db "      &#&#               $#$#          $#$#     ##                                                                      ",0
         db "      &#&#               $#$#          $#$#      ###########                                                            ",0
                                                                                                                                           
                                                                     
Game_Over db "                                                                                                                        ",0
         db "                                                                                                                        ",0
         db "             %%%%%%%%%%%    %%%%%%%%%%  %%             %%  %%%%%%%%%%%                                                  ",0
         db "           %%%             %%        %% %%%%         %%%%  %%                                                           ",0
         db "          %%%              %%        %% %%  %%     %%  %%  %%                                                           ",0
         db "          %%%              %%        %% %%    %% %%    %%  %%                                                           ",0
         db "          %%%    %%%%%%%%% %%%%%%%%%%%% %%      %%     %%  %%%%%%%%%%%                                                  ",0
         db "          %%%            % %%        %% %%             %%  %%                                                           ",0
         db "           %%%           % %%        %% %%             %%  %%                                                           ",0
         db "             %%%%%%%%%%% % %%        %% %%             %%  %%%%%%%%%%%                                                  ",0
         db "                                                                                                                        ",0
         db "                                                                                                                        ",0
         db "                                              %%%%%%%%%%     %%            %%  %%%%%%%%%%  %%%%%%%%%%                   ",0
         db "                                            %%          %%    %%          %%   %%          %%       %%                  ",0
         db "                                           %%            %%    %%        %%    %%          %%        %%                 ",0 
         db "                                           %%            %%     %%      %%     %%%%%%%%%%  %%%%%%%%%%%                  ",0
         db "                                           %%            %%      %%    %%      %%          %% %%                        ",0
         db "                                            %%          %%        %%  %%       %%          %%    %%                     ",0
         db "                                              %%%%%%%%%%            %%%        %%%%%%%%%%  %%       %%                  ",0
         
 You_Win  db "                                                                                                                        ",0
          db "                                                                                    $$$$$$      $$$$$$                  ",0
          db "          %%           %%   %%%%%%%%%%   %%          %%                          $$$     $$   $$      $$$               ",0
          db "           %%         %%   %%        %%  %%          %%                         $$        && $$         $$              ",0
          db "            %%       %%    %%        %%  %%          %%                        $$           $$           $$             ",0
          db "             %%     %%     %%        %%  %%          %%                        $$$                      $$$             ",0
          db "              %%   %%      %%        %%  %%          %%                         $$$                   $$$               ",0
          db "                % %        %%        %%  %%          %%                           $$$               $$$                 ",0
          db "                %%%        %%        %%  %%          %%                              $$            $$                   ",0
          db "                %%%        %%        %%  %%          %%                                 $        $                      ",0
          db "                %%%         %%%%%%%%%%    %%%%%%%%%%%%                                    $    $                        ",0
          db "                                                                                            $                           ",0
          db "                                                                                             $                          ",0
          db "                                                                                              $                         ",0
          db "                       %%           %%%%            %%  %%%%%%%%%%  %%            %%          $                         ",0
          db "                        %%         %%  %%          %%       %%      %%%%          %%         $                          ",0
          db "                         %%       %%    %%        %%        %%      %%  %%        %%                                    ",0 
          db "                          %%     %%      %%      %%         %%      %%    %%      %%                                    ",0
          db "                           %%   %%        %%    %%          %%      %%      %%    %%                                    ",0
          db "                            %% %%          %%  %%           %%      %%        %%  %%                                    ",0
          db "                             %%%             %%%            %%      %%          %%%%                                    ",0
          db "                              %               %         %%%%%%%%%%  %%            %%                                    ",0
                                                                                                                                                    
menu1 db "---(: MENU :)---",0                                                                     
menu2 db "1 ---(: Play :)---",0                                                                     
menu3 db "2 ---(: Instruction :)---",0                                                                     
menu4 db "3 ---(: High Scores :)---",0                                                                     
menu5 db "4 ---(: Exit :)---",0                                                                     
menu6 db "Select Option : ",0                                                                     
option1 db ?
namedis db "Please Enter Your Name : "
name1 db 20 dup(?)
filename     BYTE "data.txt",0
fileHandle   HANDLE ?
stringLength DWORD ?
bytesWritten DWORD ?

Instruction db "----(:INSTRUCTION:)----",0
Instruction1 db "Collect the coins more and more to make record! ",0
Instruction2 db "Use 'W', 'A', 'D', 'S' keys to move the Pacman. ",0
Instruction3 db "Credits GO TO TS Computing",0
next1  db "Press Any key to Go back to Menu ",0
    
temp db ?

strScore BYTE "Your score is: ",0
score dw 0

FB BYTE "Fruit Score: ",0

xPos BYTE 55
yPos BYTE 8

xCoinPos BYTE ?
yCoinPos BYTE ?

inputChar BYTE ?

ability_flag db 0
LV db" Lives: ",0
lives db 3
end_sc db " Your Score is  "

Ghostx db 58
Ghosty db 12
use_char db ' '
b1 db 0
b2 db 0
b3 db 0
b4 db 0
Ghostx1 db 110
Ghosty1 db 16
use_char2 db ' '
b5 db 0
b6 db 0
b7 db 0
b8 db 0

t1 db ?
t2 db ?
t3 db ?
t4 db ?
Ghostx2 db 50
Ghosty2 db 14
use_char3 db ' '
b9 db 0
b10 db 0
b11 db 0
b12 db 0

Ghostx3 db ?
Ghosty3 db ?
use_char4 db ' '
b13 db 0
b14 db 0
b15 db 0
b16 db 0

Ghostx4 db ?
Ghosty4 db ?
use_char5 db ' '
b17 db 0
b18 db 0
b19 db 0
b20 db 0

Ghosts_Speed db 10
time dd 0


xability db 8
yability db 4
ability db 0
ability_stay dd 0


xFruit db 115
yFruit db 0
Fruit_Score dw 0

count_l1 dw 519
count_l2 dw 509
count_l3 dw 254
level db 1
exter db 10 dup(?)
hh db "HIGH SCORES",0
h1 db " Muhammad Tahir-------------1113 ",0
exit_option db 0

   Sound byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\clk.wav",0
    Sound_start byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\clk.wav",0

     Sound1 byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\1.wav",0
     Sound1_start byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\1.wav",0

     Sound2 byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\2.wav",0
     Sound2_start byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\2.wav",0

    Sound3 byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\laugh.wav",0
  Sound3_start byte "C:\Users\tahir\OneDrive\Desktop\22i-0821\Coal_Final_Project\laugh.wav",0
    repeatimer dd 2
.code
main PROC
        

     call clrscr
     call name_page
     call DisplayMenu
     cmp exit_option,1
     je hurr
     call GetMseconds
    mov time,eax
    mov repeatimer,eax
    
 next:
 cmp level,1
 jne nx1
 call level_1_1
 jmp ok
 nx1:
 cmp level,2
 jne nx2
  call level_2_2
 jmp ok
 nx2:
 cmp level,3
 jne nx3
 call level_3_3
 jmp ok
 nx3:
 jmp exitGame
 ok:
    gameLoop:

           call getMSeconds
           sub eax,repeatimer
           cmp eax,550
          jl son
          Invoke PlaySound, offset Sound1, NULL,1h
          call getMSeconds
          mov repeatimer,eax
          son:
        call livesD
        cmp lives,0
        je exitGame
        ; getting points:
        mov bl,xPos
        cmp bl,xCoinPos
        jne notCollecting
        mov bl,yPos
        cmp bl,yCoinPos
        jne notCollecting
        ; player is intersecting coin:
        inc score
        notCollecting:

        mov eax,white (black * 16)
        call SetTextColor

        ; draw score:
        mov dl,0
        mov dh,0
        call Gotoxy
        mov edx,OFFSET strScore
        call WriteString
        movzx eax,score
        call WriteInt

          mov dl,50
        mov dh,0
        call Gotoxy
        mov edx,OFFSET FB
        call WriteString

        mov dl,64
        mov dh,0
        call Gotoxy
        movzx eax,Fruit_score
        call WriteInt

        mov dl,90
        mov dh,0
        call Gotoxy
        movzx eax,ypos
        call WriteInt
      
        mov dl,80
        mov dh,0
        call Gotoxy
        movzx eax,xpos
        call WriteInt
      
          movzx eax,ypos
            mov bl,121
            mul bl
            movzx ebx,xpos
            add eax,ebx
        
        mov dl,112
        mov dh,0
        call Gotoxy
        call WriteInt
      
   
         mov dl,116
        mov dh,5
        call Gotoxy
        movzx eax,ability
        call WriteInt
        cmp level,1
        jne ss1
        call level1
        mov ax,score
        cmp ax,count_l1
        jae nextlevel
        jmp cutit
        ss1:
        cmp level,2
        jne ss2
        call level2
        mov ax,count_l1
        add ax,count_l2
         cmp score,ax
        jae nextlevel
        jmp cutit
        ss2:
        cmp level,3
        jne ss3
        call level3
         mov ax,count_l1
         add ax,count_l2
         add ax,count_l3
         cmp score,ax
        jae nextlevel
        jmp cutit
        ss3:
        cutit:
        
  

   movzx ebx,ghosty
   movzx eax,ghostx
   push ebx
   push eax
   call GhostCollion
   pop eax
   pop ebx

   movzx ebx,ghosty1
   movzx eax,ghostx1
   push ebx
   push eax
   call GhostCollion
   pop eax
   pop ebx

   movzx ebx,ghosty2
   movzx eax,ghostx2
   push ebx
   push eax
   call GhostCollion
   pop eax
   pop ebx

   call AbilityCollion
   call FruitCollion
   call Teleport
        ; get user key input:
        call Readkey
        mov inputChar,al

         cmp inputChar,"p"
        jne go_next
        call Pause_Screen
        go_next:
        ; exit game if user types 'x':
        cmp inputChar,"x"
        je exitGame

        cmp inputChar,"w"
        je moveUp

        cmp inputChar,"s"
        je moveDown

        cmp inputChar,"a"
        je moveLeft

        cmp inputChar,"d"
        je moveRight

        ;mov eax,offset ghostx
        ;mov ebx,offset ghosty
        ;push eax
        ;push ebx
        ;call GhostMovement
        ;pop ebx
        ;pop eax
        jmp gameloop

       

      

        moveUp:
            movzx eax,ypos
            dec eax
            mov bl,121
            mul bl
            movzx ebx,xpos
            add eax,ebx
            sub eax,121
                  cmp level,1
                  jne rr1
                  mov bl ,ground_ex[eax]
                  jmp ll
                  rr1:
                  cmp level,2
                  jne rr2
                  mov bl ,ground1_ex[eax]
                  jmp ll
                  rr2:
                  cmp level,3 
                  jne rr3
                  mov bl ,ground2_ex[eax]
                  jmp ll
                  rr3:
                  ll:
            cmp bl,'0'
            jne out1
            jmp full_out
            out1:
            cmp bl,'1'
            jne not_move
            inc score
              mov bl,'0'
              cmp level,1
                    jne rr4
                    mov ground_ex[eax],bl
                    jmp ll1
                    rr4:
                    cmp level,2
                    jne rr5
                    mov ground1_ex[eax],bl
                    jmp ll1
                    rr5:
                    cmp level,3 
                    jne rr6
                    mov ground2_ex[eax],bl
                    jmp ll1
                    rr6:
                    ll1:        
            jmp full_out
            full_out:
            call UpdatePlayer
            dec yPos
            call DrawPlayer
           
            not_move:
        jmp gameLoop

        moveDown:
            movzx eax,ypos
            inc eax
            mov bl,121
            mul bl
            movzx ebx,xpos
            add eax,ebx
            sub eax,121

                  cmp level,1
                  jne rr7
                  mov bl ,ground_ex[eax]
                  jmp ll2
                  rr7:
                  cmp level,2
                  jne rr8
                  mov bl ,ground1_ex[eax]
                  jmp ll2
                  rr8:
                  cmp level,3 
                  jne rr9
                  mov bl ,ground2_ex[eax]
                  jmp ll2
                  rr9:
                  ll2:      
                  cmp bl,'0'
            jne out2
            jmp full_out2
            out2:
            cmp bl,'1'
            jne not_move2
           inc score
                  mov bl,'0'
                    cmp level,1
                    jne rr10
                    mov ground_ex[eax],bl
                    jmp ll3
                    rr10:
                    cmp level,2
                    jne rr11
                    mov ground1_ex[eax],bl
                    jmp ll3
                    rr11:
                    cmp level,3 
                    jne rr12
                    mov ground2_ex[eax],bl
                    jmp ll3
                    rr12:
                    ll3:
                    jmp full_out2
            full_out2:
            call UpdatePlayer
            inc yPos
            call DrawPlayer
            
            not_move2:
        jmp gameLoop

        moveLeft:
            movzx eax,ypos
            mov bl,121
            mul bl
            movzx ebx,xpos
            dec ebx
            add eax,ebx
            sub eax,121
            
                  cmp level,1
                  jne rr23
                  mov bl ,ground_ex[eax]
                  jmp ll7
                  rr23:
                  cmp level,2
                  jne rr24
                  mov bl ,ground1_ex[eax]
                  jmp ll7
                  rr24:
                  cmp level,3 
                  jne rr25
                  mov bl ,ground2_ex[eax]
                  jmp ll7
                  rr25:
                  ll7:     
                  cmp bl,'0'

            jne out3
            jmp full_out3
            out3:
            cmp bl,'1'
            jne not_move3
            inc score
                mov bl,'0'
                     cmp level,1
                    jne rr14
                    mov ground_ex[eax],bl
                    jmp ll6
                    rr14:
                    cmp level,2
                    jne rr15
                    mov ground1_ex[eax],bl
                    jmp ll6
                    rr15:
                    cmp level,3 
                    jne rr16
                    mov ground2_ex[eax],bl
                    jmp ll6
                    rr16:
                    ll6:    
                    jmp full_out3
            full_out3:
        call UpdatePlayer
        dec xPos
        call DrawPlayer
        
        not_move3:
        jmp gameLoop

        moveRight:
            movzx eax,ypos
            mov bl,121
            mul bl
            movzx ebx,xpos
            inc ebx
            add eax,ebx
            sub eax,121

                  cmp level,1
                  jne rr17
                  mov bl ,ground_ex[eax]
                  jmp ll4
                  rr17:
                  cmp level,2
                  jne rr18
                  mov bl ,ground1_ex[eax]
                  jmp ll4
                  rr18:
                  cmp level,3 
                  jne rr19
                  mov bl ,ground2_ex[eax]
                  jmp ll4
                  rr19:
                  ll4:   
                  cmp bl,'0'
            jne out4
            jmp full_out4
            out4:
            cmp bl,'1'
            jne not_move4
            inc score
              mov bl,'0'
                    cmp level,1
                    jne rr20
                    mov ground_ex[eax],bl
                    jmp ll5
                    rr20:
                    cmp level,2
                    jne rr21
                    mov ground1_ex[eax],bl
                    jmp ll5
                    rr21:
                    cmp level,3 
                    jne rr22
                    mov ground2_ex[eax],bl
                    jmp ll5
                    rr22:
                    ll5:  
                    jmp full_out4
            full_out4:
        call UpdatePlayer
        inc xPos
        call DrawPlayer
       
        not_move4:
        jmp gameLoop

    jmp gameLoop

    nextLevel:
    inc level
    cmp level,4
    je winGame
    jmp next

    winGame:
    call YouWin
    jmp hurr
    exitGame:
    call GameOver
    hurr:
    exit
main ENDP

level_1_1 proc

    call clrscr
    mov eax,black
    call setTextColor
    call clrscr
    mov edi,offset ground
    push edi
    call maze
    pop edi
    call DrawPlayer
    call Randomize
    mov bl,48
    mov bh,26
    mov ghostx,bl
    mov ghosty,bh

    mov bl,16
    mov bh,7
    mov ghostx1,bl
    mov ghosty1,bh

     mov bl,110
    mov bh,28
    mov ghostx2,bl
    mov ghosty2,bh
    mov bl,40
    mov Ghosts_Speed,bl

ret
level_1_1 ENDP
Level1 Proc

    
         lea ebx, b2
         lea ecx, b3
         lea edx, b4
         lea edi, ghosty
         lea esi,ground_ex
         lea eax, use_char


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b1
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

         lea ebx, b6
         lea ecx, b7
         lea edx, b8
         lea edi, ghosty1
         lea esi,ground_ex
         lea eax, use_char2


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b5
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx1
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax


ret
Level1 ENDP

level_2_2 proc

    call clrscr
    mov eax,black
    call setTextColor
    call clrscr
    mov edi,offset ground1
    push edi
    call maze
    pop edi
    call DrawPlayer
    call Randomize
    mov bl,47
    mov bh,6
    mov ghostx,bl
    mov ghosty,bh

    mov bl,70
    mov bh,19
    mov ghostx1,bl
    mov ghosty1,bh

     mov bl,109
    mov bh,28
    mov ghostx2,bl
    mov ghosty2,bh
    mov bl,30
    mov Ghosts_Speed,bl

ret
level_2_2 ENDP

Level2 proc


         lea ebx, b2
         lea ecx, b3
         lea edx, b4
         lea edi, ghosty
         lea esi,ground1_ex
         lea eax, use_char


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b1
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

         lea ebx, b6
         lea ecx, b7
         lea edx, b8
         lea edi, ghosty1
         lea esi,ground1_ex
         lea eax, use_char2


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b5
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx1
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

         lea ebx, b10
         lea ecx, b11
         lea edx, b12
         lea edi, ghosty2
         lea esi,ground1_ex
         lea eax, use_char3


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b9
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx2
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

   call getMSeconds
   sub eax,time
   cmp eax,15000
   jl no_eat
        mov edi,offset ground1_ex
        push edi
       call DrawAbility
       pop edi

       mov eax,2
       call delay
        mov edi,offset ground1_ex
        push edi
       call DrawFruit
       pop edi
       call getMSeconds
       mov time,eax
   no_eat:



ret
Level2 ENDP

level_3_3 proc

    call clrscr
    mov eax,black
    call setTextColor
    call clrscr
    mov edi,offset ground2
    push edi
    call maze
    pop edi
    call DrawPlayer
    call Randomize
    mov bl , 5
    mov Ghosts_Speed,bl

    mov bl,109
    mov dl,28
    mov Ghostx,bl
    mov Ghosty,dl

         mov bl,9
         mov dl,3
         mov Ghostx1,bl
         mov Ghosty1,dl
    
    mov bl,50
    mov dl,14
    mov Ghostx2,bl
    mov Ghosty2,dl
         
         mov bl,109
         mov dl,3
         mov Ghostx3,bl
         mov Ghosty3,dl
    
    mov bl,61
    mov dl,20
    mov Ghostx4,bl
    mov Ghosty4,dl

    ret
level_3_3 ENDP

Level3 proc


         lea ebx, b2
         lea ecx, b3
         lea edx, b4
         lea edi, ghosty
         lea esi,ground2_ex
         lea eax, use_char


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b1
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

         lea ebx, b6
         lea ecx, b7
         lea edx, b8
         lea edi, ghosty1
         lea esi,ground2_ex
         lea eax, use_char2


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b5
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx1
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

         lea ebx, b10
         lea ecx, b11
         lea edx, b12
         lea edi, ghosty2
         lea esi,ground2_ex
         lea eax, use_char3


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b9
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx2
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax

    
         lea ebx, b14
         lea ecx, b15
         lea edx, b16
         lea edi, ghosty3
         lea esi,ground2_ex
         lea eax, use_char3


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b13
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx3
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax


         lea ebx, b18
         lea ecx, b19
         lea edx, b20
         lea edi, ghosty4
         lea esi,ground2_ex
         lea eax, use_char3


    ; Pass the addresses to GhostMovement
    push eax
    push esi
    push edx  ; Pass the address of b4
    push ecx  ; Pass the address of b3
    push ebx  ; Pass the address of b2
    lea eax, b17
    push eax  ; Pass the address of b1
    push edi  ; Pass the address of ghosty
    lea esi, ghostx4
    push esi  ; Pass the address of ghostx

  

        call GhostMovement
      
    pop esi
    pop edi
    pop eax
    pop ebx
    pop ecx
    pop edx
    pop esi
    pop eax
     call getMSeconds
   sub eax,time
   cmp eax,15000
   jl no_eat
        mov edi,offset ground2_ex
        push edi
       call DrawAbility
       pop edi

       mov eax,2
       call delay
        mov edi,offset ground2_ex
        push edi
       call DrawFruit
       pop edi
       call getMSeconds
       mov time,eax
   no_eat:



ret
Level3 ENDP

Teleport proc

mov al,xpos
cmp xpos,0
ja out1
call updateplayer
mov al,118
mov xpos,al
call drawplayer
jmp full_out
out1:
cmp xpos,118
jle out2
call updateplayer
mov al,0
mov xpos,al
call drawplayer
jmp full_out
out2:
full_out:
ret
Teleport ENDP

DrawPlayer PROC
    ; draw player at (xPos,yPos):
    mov eax,yellow ;(blue*16)
    call SetTextColor
    mov dl,xPos
    mov dh,yPos
    call Gotoxy
    mov al,"X"
    call WriteChar
    ret
DrawPlayer ENDP

DrawGhost Proc

    PUSH EBP
    mov EBP,ESP

    mov eax,yellow+(Red*24)
    call SetTextColor
    mov dl,[ESP+8]
    mov dh,[ESP+12]
    call Gotoxy
    mov al,"G"
    call WriteChar
    pop EBP

ret
DrawGhost ENDP

DrawAbility Proc

    Push EBP
    mov EBP,ESP
    mov edi,[EBP+8]
    mov bl,0
    mov ability,bl

    mov eax,black
    call settextcolor
    mov dl,xability
    mov dh,yability
    call Gotoxy
    mov al,' '
    call writeChar

  Again:
    call Randomize
    mov eax, 116
    call RandomRange
    add al, 2
    mov xAbility, al

    mov eax, 26
    call RandomRange
    add al, 2
    mov yAbility, al

    movzx eax, yAbility
    mov bl, 121
    mul bl
    movzx ebx, xAbility
    add eax, ebx
    sub eax, 121

    mov bl, [edi + eax]
    cmp bl, '0'
    jne Again ; Jump back to Again if the value is not '0'

    ; If the value is '0', continue with the rest of your code here


    mov eax,yellow+(Green*28)
    call SetTextColor
    mov dl,xAbility
    mov dh,yAbility
    call Gotoxy
    mov al,"O"
    call WriteChar

    pop EBP

ret
DrawAbility ENDP

DrawFruit Proc

    Push EBP
    mov EBP,ESP
    mov edi,[EBP+8]
   

    mov eax,Black
    call settextcolor
    mov dl,xFruit 
    mov dh,yFruit
    call Gotoxy
    mov al,' '
    call writeChar

  Again:
    call Randomize
    mov eax, 116
    call RandomRange
    add al, 2
    mov xFruit, al

    mov eax, 26
    call RandomRange
    add al, 2
    mov yFruit, al

    movzx eax, yFruit
    mov bl, 121
    mul bl
    movzx ebx, xFruit
    add eax, ebx
    sub eax, 121

    mov bl, [edi + eax]
    cmp bl, '0'
    jne Again ; Jump back to Again if the value is not '0'

    ; If the value is '0', continue with the rest of your code here


    mov eax,yellow+(Green*28)
    call SetTextColor
    mov dl,xFruit
    mov dh,yFruit
    call Gotoxy
    mov al,"F"
    call WriteChar

    pop EBP

ret

ret
DrawFruit ENDP

AbilityCollion Proc

mov dl,xAbility
mov dh,yAbility
cmp dl,xpos
jne out1
cmp dh,ypos
jne out1
mov bl,1
mov ability,bl
out1:
ret
AbilityCollion ENDP
FruitCollion Proc

mov dl,xFruit
mov dh,yFruit
cmp dl,xpos
jne out1
cmp dh,ypos
jne out1
mov bl,10
mov dl,20
mov xFruit,dl
mov yFruit,bl
mov ax,Fruit_Score
add ax,5
mov Fruit_Score,ax
out1:
ret
FruitCollion ENDP

GhostMovement Proc 

                          Push EBP
                          mov EBP,ESP
                          
                          mov edi,[EBP+32]
                           mov eax,[EBP+28]
                          mov bl,[eax]
                          mov t1,bl
                          
                          
                           mov eax,[EBP+24]
                          mov bl,[eax]
                          mov t2,bl
                          
                          
                           mov eax,[EBP+20]
                          mov bl,[eax]
                          mov t3,bl
                          
                           mov eax,[EBP+16]
                          mov bl,[eax]
                          mov t4,bl

            cmp t1,0
            jne not_move2
            mov eax,[EBP+12]
            mov bl,[eax]
            dec bl
            movzx eax, bl
            mov bl,121
            mul bl
            mov ebx,[EBP+8]
            mov dl,[ebx]
            movzx ebx,dl
            add eax,ebx
            sub eax,121
            mov bl ,[edi+eax]
            cmp bl,'0'

            jne out1
            jmp full_out
            out1:
            cmp bl,'1'
            jne not_move__
            jmp full_out
            full_out:
            mov ebx,[EBP+12]
            mov eax,0
            mov al,[ebx]
            movzx eax,al
            mov ebx,[EBP+8] 
            mov edx,0
            mov dl,[ebx]
            movzx edx,dl
            mov ebx,[EBP+16]
            push ebx
            push eax
            push edx
            call UpdateGhost
             pop edx
            pop eax
            pop ebx
            mov ebx,[EBP+12]
            dec byte ptr [ebx]
            mov eax,0
            mov al,[ebx]
            movzx eax,al
            mov ebx,[EBP+8] 
            mov edx,0
            mov dl,[ebx]
            movzx edx,dl
            push eax
            push edx
            call DrawGhost
            pop edx
            pop eax
            movzx eax,Ghosts_Speed
            call Delay
            jmp detected
            not_move__:

                mov eax,[EBP+28]
                mov bl,1
                mov [eax],bl

               jmp detected


                           not_move2:
                          cmp t3,0
                          jne not_move
                          mov eax,[EBP+12]
                          mov bl,[eax]
                          movzx eax, bl
                          mov bl,121
                          mul bl
                          mov ebx,[EBP+8]
                          mov dl,[ebx]
                          dec dl
                          movzx ebx,dl
                          add eax,ebx
                          sub eax,121
                          mov bl ,[edi+eax]
                          cmp bl,'0'
                          jne out3
                          jmp full_out3
                          out3:
                          cmp bl,'1'
                          jne not_move3__
                          jmp full_out3
                          full_out3:
                          mov ebx,[EBP+12]
                          mov eax,0
                          mov al,[ebx]
                          movzx eax,al
                          mov ebx,[EBP+8] 
                          mov edx,0
                          mov dl,[ebx]
                          movzx edx,dl
                           mov ebx,[EBP+16]
                          push ebx
                          push eax
                          push edx
                          call UpdateGhost
                           pop edx
                          pop eax
                          pop ebx
                          
                          mov ebx,[EBP+12]
                          mov eax,0
                          mov al,[ebx]
                          movzx eax,al
                          mov ebx,[EBP+8] 
                          dec byte ptr [ebx]
                          mov edx,0
                          mov dl,[ebx]
                          movzx edx,dl
                          push eax
                          push edx 
                          call DrawGhost
                          pop edx
                          pop eax
                          movzx eax,Ghosts_Speed
                          call Delay
                          jmp detected
                          not_move3__:
                              mov eax,[EBP+20]
                              mov bl,1
                              mov [eax],bl
                              jmp detected
   
            not_move:
            cmp t2,0
            jne not_move3
            mov eax,[EBP+12]
            mov bl,[eax]
            inc bl
            movzx eax, bl
            mov bl,121
            mul bl
            mov ebx,[EBP+8]
            mov dl,[ebx]
            movzx ebx,dl
            add eax,ebx
            sub eax,121
            mov bl ,[edi+eax]
            cmp bl,'0'
            jne out2
            jmp full_out2
            out2:
            cmp bl,'1'
            jne not_move2__
            jmp full_out2
            full_out2:
            mov ebx,[EBP+12]
            mov eax,0
            mov al,[ebx]
            movzx eax,al
            mov ebx,[EBP+8] 
            mov edx,0
            mov dl,[ebx]
            movzx edx,dl
            mov ebx,[EBP+16]
            push ebx
            push eax
            push edx
            call UpdateGhost
             pop edx
            pop eax
           pop ebx

            mov ebx,[EBP+12]
            inc byte ptr [ebx]

            mov eax,0
            mov al,[ebx]
            movzx eax,al
            mov ebx,[EBP+8] 
            mov edx,0
            mov dl,[ebx]
            movzx edx,dl
            push eax
            push edx 
            call DrawGhost
            pop edx
            pop eax
            movzx eax,Ghosts_Speed
            call Delay
            jmp detected 
            not_move2__:
                mov eax,[EBP+24]
                mov bl,1
                mov [eax],bl
                jmp detected
   
   
      
                           not_move3:
                           cmp t4,0
                           jne not_move4
                           mov eax,[EBP+12]
                           mov bl,[eax]
                           movzx eax, bl
                           mov bl,121
                           mul bl
                           mov ebx,[EBP+8]
                           mov dl,[ebx]
                           inc dl
                           movzx ebx,dl
                           add eax,ebx
                           sub eax,121
                           mov bl ,[edi+eax]
                           cmp bl,'0'
                           jne out4
                           jmp full_out4
                           out4:
                           cmp bl,'1'
                           jne not_move4__
                           jmp full_out4
                           full_out4:
                           mov ebx,[EBP+12]
                           mov eax,0
                           mov al,[ebx]
                           movzx eax,al
                           mov ebx,[EBP+8] 
                           mov edx,0
                           mov dl,[ebx]
                           movzx edx,dl
                            mov ebx,[EBP+16]
                           push ebx
                           push eax
                           push edx
                           call UpdateGhost
                      
                            pop edx
                           pop eax
                           pop ebx
                          mov ebx,[EBP+12]
                           mov eax,0
                           mov al,[ebx]
                           movzx eax,al
                           mov ebx,[EBP+8] 
                           inc byte ptr [ebx]
                           mov edx,0
                           mov dl,[ebx]
                           movzx edx,dl
                           push eax
                           push edx 
                           call DrawGhost
                           pop edx
                           pop eax
                        movzx eax,Ghosts_Speed
                        call Delay
                        jmp detected
                        not_move4__:
                        mov dl,0
                               mov eax,[EBP+28]
                               mov ebx,[EBP+24]
                               mov ecx,[EBP+20]
                               mov [eax],dl
                               mov [ebx],dl
                               mov [ecx],dl
                        not_move4:
        detected:
        pop EBP

ret
GhostMovement ENDP

UpdateGhost PROC

    Push EBP
    mov EBP,ESP
    mov eax,black+(Black*16)
    call settextcolor
    mov dl,[EBP+8]
    mov dh,[EBP+12]
    movzx eax,dl
    movzx ebx,dh
    push ebx
    push eax
    call GhostCollion
    pop ebx
    pop eax

    mov dl,[EBP+8]
    mov dh,[EBP+12]
    call Gotoxy
    mov eax,[EBP+16]
    mov al,' ' 
    call WriteChar

    POP EBP
    ret
UpdateGhost endp

GhostCollion proc

    Push EBP
    mov EBP,ESP

    cmp ability,1
    je full_out
    mov dl,[EBP+8]
    mov dh,[EBP+12]
    cmp dl,xpos
    jne out1
    cmp dh,ypos
    jne out1
    dec lives
    mov bl,59
    mov xpos,bl
    mov bl,8
    mov ypos,bl
    call updatePlayer
    call DrawPlayer
    Invoke PlaySound, offset Sound2, NULL,1h
    mov eax,1100
    call delay

    out1:
    full_out:
    POP EBP

ret
GhostCollion ENDP

UpdatePlayer PROC
 mov eax,black+(Black*16)
     call settextcolor
    mov dl,xPos
    mov dh,yPos
    call Gotoxy
    mov al," "
    call WriteChar

    ret
UpdatePlayer ENDP

Maze Proc

Push EBP
mov EBP,ESP
mov esi,[EBP+8]
mov ecx,29
mov bl,1
mov temp,bl

mov edx,esi
mov eax,blue
call settextcolor
L1:
    mov ebx,edx
     mov dl,0
     mov dh,temp
     call Gotoxy
        mov edx,ebx;
        call writeString
        inc temp
        add edx,121;
  LOOP L1
  Pop EBP
ret
Maze ENDP

LivesD Proc Uses eax edx

mov eax,Red
call setTextColor

mov dl,30
mov dh,0
call Gotoxy
mov edx,offset lv
call writestring
mov dl,40
mov dh,0
call Gotoxy
movzx eax,lives

call writeInt
ret
LivesD ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Name Page;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Name_page proc


call clrscr
mov eax,Brown+(Black)
call setTextColor
mov bl,2
mov temp,bl
mov edx,offset name_pg
mov ecx,13

L1:

mov ebx,edx
mov dl,0
mov dh,temp
call Gotoxy
mov edx,ebx
call WriteString
add edx,121
inc temp

LOOP L1

mov eax,Red
call setTextColor
mov dl,35
   mov dh,22
   call Gotoxy
mov edx,offset namedis
call WriteString

mov edx,offset name1
mov ecx,20
call ReadString
mov edx,offset filename

mov edx,offset filename
call CreateOutputFile
mov filehandle,eax
invoke SetFilePointer, eax, 0, NULL, FILE_END
mov eax,filehandle
mov edx,offset name1
mov ecx,20

call WritetoFile


ret
name_page ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Display Menu;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DisplayMenu proc

Again:
call clrscr
mov eax,Yellow
call settextcolor
mov al,0
mov temp,al
mov ecx,14
mov edx,offset menu

L1:

   mov ebx, edx
   mov dl,0
   mov dh,temp
   call Gotoxy
   mov edx,ebx
   call writeString
   add edx,121;
   inc temp
   mov eax,100
   call delay

LOOP L1
   
mov eax,Red
call setTextColor


   mov dl,53
   mov dh,15
   call Gotoxy
mov edx,offset menu1
call WriteString

mov eax,Red
call setTextColor

 mov dl,50
   mov dh,17
   call Gotoxy
mov edx,offset menu2
call WriteString

 mov dl,50
   mov dh,18
   call Gotoxy
mov edx,offset menu3
call WriteString

 mov dl,50
   mov dh,19
   call Gotoxy
mov edx,offset menu4
call WriteString

mov dl,50
   mov dh,20
   call Gotoxy
mov edx,offset menu5
call WriteString


mov eax,Green
call SetTextColor


mov dl,35
   mov dh,23
   call Gotoxy
mov edx,offset menu6
call WriteString
call ReadInt
mov option1,al

cmp option1,1
je outttt
cmp option1, 2
jne out2
 Invoke PlaySound, offset Sound, NULL,1h
 mov eax,50
 call Delay
call DisplayInstructions
    jmp Again
    out2:
 cmp option1,3
 jne out3
  Invoke PlaySound, offset Sound, NULL,1h
  mov eax,50
 call Delay
 call DisplayHigh
 jmp Again
 out3:
 cmp option1,4
 je out1
    jmp Again

    out1:
    mov bl,1
    mov exit_option,bl
    outttt:

     Invoke PlaySound, offset Sound, NULL,1h
     mov eax,50
 call Delay

ret
DisplayMenu ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Display High Scores
DisplayHigh proc

call clrscr
mov eax,Yellow
call settextcolor
mov al,0
mov temp,al
mov ecx,14
mov edx,offset menu

L1:

   mov ebx, edx
   mov dl,0
   mov dh,temp
   call Gotoxy
   mov edx,ebx
   call writeString
   add edx,121;
   inc temp
   mov eax,100
   call delay

LOOP L1
mov eax,Red
call setTextColor

mov dl,51
mov dh,17
call Gotoxy
mov edx,offset hh
call WriteString
mov eax,Blue
call setTextColor

mov dl,40
mov dh,20
call Gotoxy
mov edx,offset h1
call WriteString
mov eax,Green
call SetTextColor

mov dl,20
   mov dh,27
   call Gotoxy
mov edx,offset next1
call WriteString
call ReadChar
  Invoke PlaySound, offset Sound, NULL,1h

ret
DisplayHigh ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Pause;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Pause_Screen Proc

Again:
call readChar
cmp al,'p'
jne Again
ret
Pause_Screen ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Instructions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DisplayInstructions  proc

call clrscr
mov eax,Yellow
call settextcolor
mov al,0
mov temp,al
mov ecx,14
mov edx,offset menu

L1:

   mov ebx, edx
   mov dl,0
   mov dh,temp
   call Gotoxy
   mov edx,ebx
   call writeString
   add edx,121;
   inc temp

LOOP L1
   
mov eax,Red
call setTextColor

   mov dl,53
   mov dh,15
   call Gotoxy
mov edx,offset Instruction
call WriteString

mov eax,Red
call setTextColor

 mov dl,35
   mov dh,17
   call Gotoxy
mov edx,offset Instruction1
call WriteString

 mov dl,35
   mov dh,18
   call Gotoxy
mov edx,offset Instruction2
call WriteString

 mov dl,35
   mov dh,19
   call Gotoxy
mov edx,offset Instruction3
call WriteString


mov eax,Green
call SetTextColor

mov dl,20
   mov dh,27
   call Gotoxy
mov edx,offset next1
call WriteString
call ReadChar
  Invoke PlaySound, offset Sound, NULL,1h

ret
DisplayInstructions ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Game Over;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

GameOver Proc


          call clrscr
          mov eax,Blue
          call setTextColor
          mov bl,0
          mov temp,bl
          mov edx,offset Game_over
          mov ecx,19
          
          L1:
          
          mov ebx,edx
          mov dl,0
          mov dh,temp
          call Gotoxy
          mov edx,ebx
          call WriteString
          add edx,121
          inc temp
          
          LOOP L1
          
          mov eax,Red
          call setTextColor
          
          mov dl,55
          mov dh,22
          call Gotoxy
          mov edx,offset end_sc
          call WriteString
          
          
          mov dl,63
          mov dh,24
          call Gotoxy
          mov eax,0
          mov ax,score
          add ax,Fruit_Score
          call WriteInt
          
          mov eax,100
          call Delay
               Invoke PlaySound, offset Sound3, NULL,1h
          
          call ReadChar
ret
GameOver ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;You Win;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Youwin proc


       call clrscr
       mov eax,Magenta
       call setTextColor
       mov bl,0
       mov temp,bl
       mov edx,offset You_Win
       mov ecx,22
       
       L1:
       
       mov ebx,edx
       mov dl,0
       mov dh,temp
       call Gotoxy
       mov edx,ebx
       call WriteString
       add edx,121
       inc temp
       
       LOOP L1
       
       mov eax,Red
       call setTextColor
       
       mov dl,20
       mov dh,24
       call Gotoxy
       mov edx,offset end_sc
       call WriteString
       
       
       mov dl,25
       mov dh,26
       call Gotoxy
       mov eax,0
       mov ax,score
       add ax,Fruit_Score
       call WriteInt
       
       mov edx,offset exter
       mov ecx,10
       call ReadString

ret
Youwin ENDP

END main
